#!/bin/bash

# Render.com specific start script
echo "üöÄ Starting Multi-Cloud AI Management Backend on Render.com..."

# Set production environment
export ENVIRONMENT=production
export DEBUG=false
export RELOAD=false

# Validate required environment variables
echo "üîç Validating environment variables..."

if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå ERROR: DATABASE_URL is not set. Please connect a PostgreSQL database in Render dashboard."
    exit 1
fi

if [ -z "$SESSION_SECRET" ]; then
    echo "‚ùå ERROR: SESSION_SECRET is not set. This should be auto-generated by Render."
    exit 1
fi

if [ -z "$GEMINI_API_KEYS" ] && [ -z "$GEMINI_API_KEY" ]; then
    echo "‚ùå ERROR: Neither GEMINI_API_KEYS nor GEMINI_API_KEY is set."
    echo "Please set GEMINI_API_KEYS in Render dashboard with your comma-separated API keys."
    exit 1
fi

# Validate database connection
echo "üîå Testing database connection..."
python -c "
import os
from sqlalchemy import create_engine
try:
    engine = create_engine(os.environ['DATABASE_URL'])
    with engine.connect():
        print('‚úÖ Database connection successful')
except Exception as e:
    print(f'‚ùå Database connection failed: {e}')
    exit(1)
"

if [ $? -ne 0 ]; then
    exit 1
fi

echo "‚úÖ Environment validation passed"

# Show configuration summary
echo "üìä Configuration Summary:"
echo "   ‚Ä¢ Environment: ${ENVIRONMENT}"
echo "   ‚Ä¢ Debug: ${DEBUG}"  
echo "   ‚Ä¢ Workers: ${WORKERS:-4}"
echo "   ‚Ä¢ Port: ${PORT:-10000}"
echo "   ‚Ä¢ Database: $(echo $DATABASE_URL | cut -d'@' -f2)"

# Initialize database
echo "üóÑÔ∏è Initializing database..."
python -c "
from core.db import init_db
try:
    init_db()
    print('‚úÖ Database initialized successfully')
except Exception as e:
    print(f'‚ùå Database initialization failed: {e}')
    exit(1)
"

if [ $? -ne 0 ]; then
    exit 1
fi

# Start the application with production settings
echo "üì° Starting FastAPI server on port ${PORT:-10000}..."
exec gunicorn -w ${WORKERS:-4} -k uvicorn.workers.UvicornWorker main:app \
    --bind 0.0.0.0:${PORT:-10000} \
    --timeout 120 \
    --keep-alive 2 \
    --max-requests 1000 \
    --max-requests-jitter 50 \
    --preload \
    --log-level info \
    --access-logfile - \
    --error-logfile -